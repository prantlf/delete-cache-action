name: Test or Release

on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
  pull_request:

jobs:

  prepare:
    runs-on: ubuntu-latest
    steps:
    - run: echo "test" > LICENSE-linux-x64.zip
    - uses: actions/cache/save@v4
      name: Put archive to cache
      with:
        path: LICENSE-linux-x64.zip
        key: LICENSE-linux-x64.zip-${{ github.sha }}

  release:
    needs:
      - prepare
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v3
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'
    - uses: pnpm/action-setup@v2
      with:
        version: latest
        run_install: |
          - args: [--frozen-lockfile, --no-verify-store-integrity]
    # - run: npm run build
    #   shell: bash
    - run: npm test
      shell: bash
    - uses: actions/cache/restore@v4
      with:
        path: LICENSE-linux-x64.zip
        key: LICENSE-linux-x64.zip-${{ github.sha }}
        fail-on-cache-miss: true
    - run: |
        if [ ! -f "LICENSE-linux-x64.zip" ]; then
          echo "LICENSE-linux-x64.zip does not exist"
          exit 1
        fi
      shell: bash
    - uses: ./
      with:
        key: LICENSE-linux-x64.zip-${{ github.sha }}
    - run: rm LICENSE-linux-x64.zip
      shell: bash
    - uses: actions/cache/restore@v4
      with:
        path: LICENSE-linux-x64.zip
        key: LICENSE-linux-x64.zip-${{ github.sha }}
        fail-on-cache-miss: false
    - run: |
        if [ -f "LICENSE-linux-x64.zip" ]; then
          echo "LICENSE-linux-x64.zip exists"
          exit 1
        fi
      shell: bash
    - uses: prantlf/publish-release-action@v1
      if: ${{ github.ref_name == 'master' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
